
------------------------------------- 1 일차 -------------------------------------

C:\Program Files\Java\jdk1.8.0_131\src.zip
초기 코드들의 모음집
C:\Program Files\Java\jdk1.8.0_131\bin
java.exe vm 으로 자바 프로그램 실행할 수 있게 도와줌
java-rmi.exe rmi 코드 처리
appletviewer.exe 
기본적으로 jre 를 실행시키려 함.
jdk를 실행해주기 위해 JAVA_HOME을 설정한다.
내컴퓨터>속성>고급시스템속성>환경변수>시스템변수>새로만들기>JAVA_HOME>C:\Program Files\Java\jdk1.8.0_131 추가
내컴퓨터>속성>고급시스템속성>환경변수>시스템변수>path>편집>맨 앞에 %JAVA_HOME%\bin; 추가
eclipse는 압축 해제하여 사용하고싶은 경로에 저장
eclipse폴더에 eclipse.ini 워드패드로 열기
옵션들이 기재되어있음
-X : 적용 될수도 안될수도 있음
ms : memory start, start memory, 힙영역 메모리를 지정
mx : 기본 사이즈
XXMaxPermSize : 클래스 메모리
vdi 에서 실행하는 환경이므로 기본 사이즈를 512로 변경

eclipse 실행
window>preferences>general>workspace>Text File Encoding>UTF-8로 변경>apply>ok
window>preferences>general>appearance>Colors and Fonts>취향껏 변경
오른쪽 Quick Access 옆탭 추가 눌러서 Java 추가
 - 패키지 익스플로러에 추가할때 JavaProject로 시작 가능
new java project
프로젝트명 지정
next
libraries
JRE가 보임
Add External JARs로 JAR 파일 추가 가능
Package(chapter) 추가
Class 추가
이름 지정 후 Public static void main 박스 클릭
ctrl 누르고 클릭하면 상위 클래스로 이동 가능
ctrl+alt+↓ : 한줄 복사 엔터 붙여넣기 기능
alt+↑,↓ : 한줄 줄 이동 기능
ctrl+shift+f : 코드 정렬 기능

------------------------------------- 2 일차 -------------------------------------

modifier 종류
├access modifier(접근제한자)
│ ├─public : 어디서나 접근 가능(패키지가 달라도 접근 가능)
│ ├─protected : 패키지가 달라도 상속 관계에서는 접근 가능
│ ├─생략, default : 같은 패키지 내에서 접근 가능
│ └─pricate	: 선언한 클래스 내에서만 접근 가능
└usage modifier(활용제한자)
  ├─static	: 동적인 자바를 정적 성격 부여
  ├─final	: 수정 불가
  └─abstract	: 추상적 성격 부여

[public | final or abstract] class 클래스이름 [extends 부모클래스이름]
	[implements 슈퍼인터페이스이름, ...]{ 

	//속성 선언
	[modifiers] DataType 속성명 [=값];

	//생성자 선언
	[access modifier] 클래스이름([args]){
		//객체 초기화 코드 작성
	}

	//메서드를 선언
	[modifiers] return_type 메소드이름([args]){
		[return 값;]
	}
}

객체 생성 방법 : 
new 생성자([args]);
//new : 동적으로 할당하겠다.
속성, 메서드 접근
객체.속성명 객체.메서드([args])

------------------------------------- 3 일차 -------------------------------------

[modifier] class 클래스명 extends 부모클래스이름;
클래스로딩 시 동적으로 부모클래스 로딩

------------------------------------- 4 일차 -------------------------------------

다형성 관련 modifier
access modifier : public > pritected > 생략(default) > private
usage modifier : static, final, abstract
  static : 동적인 java를 정적으로
  final : 수정 불가
  abstract : 추상

------------------------------------- 5 일차 -------------------------------------

RuntimeException (UnChecked Exception)
├ NullPointException 
│ (객체 생성없이 속성,메서드에 접근한 경우)
├ ClassCastException 
│ (down casting 할 수 없는데 한 경우)
├ ArrayIndexOutOfBoundsException 
│ (배열의 접근 범위를 벗어난 경우)
└ NumberFormatException 
  (문자열을 해당 format(정수, 실수, 문자, 논리)로 변환 시 오류 발생)

1. try ~ catch : 오류가 발생한 곳에서 예외처리
try{
   ~ // (1) 실행
   ~ // (2) 오류발생코드
   ~ // (3) 
} catch ( 예외타입 인자 ) {
   ~ // (4) 예외처리
} finally {
   ~ // (5) try 들어오면 꼭 실행되는 코드
}

(1) -> (2) -> (4) -> (5)
순서로 실행된다.


Collection
↑
├─List : 순서대로 저장 O, 데이터 중복 O, Index(0~size), 저장Index(0~size-1)
│   ├ Array List  : 배열로 저장, 3개 저장중일때 Index=3, 저장Index=0~2
│   │               삽입 가능(저장위치에 저장 시 뒤로 밀림), 5번자리에 저장X
│   │               삭제 가능(삭제위치를 삭제 시 앞으로 당김)
│   │               중간 삽입,삭제 다수 발생 시 성능 저하
│   └ Linked List : 데이터 저장 외에 다음저장, 이전저장에 대한 위치정보 보유
│					삽입 가능(저장 시 이전, 이후 위치정보만 교체 삽입)
│					삭제 가능(삭제 시 이전, 이후 위치정보만 교체 후 삭제)
│					중간 삽입,삭제 성능 좋음(이전, 이후 위치정보 교체)
└─ SET : 순서대로 저장 X, 데이터 중복 X, Index X

시험 : execption object collection

----------------------------------- 6 일차 이론 -----------------------------------
new MyThread()
└─ start() ┬┬─> Runnable : 상태로 대기열에 들어감
		   ↑│   -Max, Norm, Min 에 들어갈 수 있음
		   ││   -지정하지 않으면 Norm에 들어감
		   │├─> Scheduler 높은 방에 있는 Thread부터 스케줄링
		   ↑└─> Run() : Thread 수행 시작
		   │    ├─> Dead : Run메서드 종료 후 Thread 종료, 종료 후 start 시키면 Exception발생
		   │	│		   stop메서드 실행
		   └───<┼─> Block : I/O, Sleep, Suspend 가능(종료 시 Runnable로보냄)
				└─> Wait : notify(), notifyAll(), wait() 으로 오게되는 대기 풀

~ <- 코드라고 명시
아래 코드들 중 싱크로 나이즈드 상황을 만드려면 1)과 같이 작성 
	~~~
	~~~
	~~~
1)  Synchronized(객체){
	~~~
	~~~
	~~~
	}

시험 문제
객체지향 관련 문제 20 ^
배열 2~3 ^
Statement
(이론 + 실제 예제) 알아야 함
실행결과를 쓰시오, 틀린 이유를 쓰시오
Data - Primitive type : byte -> short, char -> int -> long -> float -> double
						(이 순서로 자동형변환, 거꾸로는 명시 필요)
						boolean
						(형변환 불가)
	 - Reference Type :
  modifier : [public | (abstract or final)] class 클래스이름[extends SuperClass] [implements SuperInterface, ...]{
  			         (protected, private, static 사용불가)
  			 	// 속성
  			 		[modifier]데이터타입 id;
  			 		 (abstract X)
  			 		
  			 	// 생성자
  			 		[access modifier] 클래스이름 ([args, ...]) { }
  			 				  (ruturn타입 X)
  			 						
  			 	// 메서드
  			 		[modifier] return타입 메서드이름([args, ...]){
  			 		
  			 		}
  			 }
Method

클래스명 변수 = new 생성자([...]) [.메서드명]
				데이터타입[] id = new 데이터타입[배열크기];
										접근범위 : 0 ~ length-1
										
상속 - 속성
     - 메서드 [modifier] class 클래스명 extends 부모클래스명
			  public MyDate(){
			  	super(); // 컴파일러가 자동으로한줄 끼워 넣는다.
			  			// 자바는 동적이라 메모리 할당, 초기화를 위해 끼워넣음
			  			// 부모 기본 생성자가 없으면 자식측에서 에러남
			  			// 기본 생성자가 없다면, 자식측에서 부모의 인자 있는 생성자로 콜해야한다.
			  			// super는 생성자의 첫번째행에서만 실행 가능.
			  			//////////시험문제//////////
			  			1. 서브에서 어떻게 해아하나, 이런 상황을 어떻게 해결해야 하나
			  			2. 부모측이 public 인데 자식측에서 더 작은 걸로 선언할때, modifier 범위문제
			  			3. 생성자 순서
			  			4. 	
			  }

Reference의 다형성 : 모든 sub 는 super로 자동 형변환이 된다. (up casting)
부모 클래스는 자식 메서드에 접근 불가
따라서 (subType)부모객체; 로 형변환하여 접근할 수 있다.
하지만 모든 부모객체가 형변환이 가능한 것은 아님

Employee emp = new Engineer();
down casting 이 일어나면 캐스팅 한 형태로 만 형변환 가능

public void add(Employee emp){
	if(emp instanceof Engineer){
		Engineer eng = (Engineer) emp;
	} else if(emp instanceof Manager){
		Manager mgr = (Engineer) emp;
	}
}


Employee emp = new Engineer();
emp.toString();
//Engineer에 있는 toString을 호출할 것이다. => virtual invocation


반드시 예외처리를 해야하는것
안해도 괜찮은것

실행시 발생하는 오류 runtime execption => 자식들은 unchecked exception 
(대부분이 디버그 거리, 사용자 입력에대한 에러처리 필수)

1. try catch final
2. [modifier] 리턴타입 메서드이름(args) [throws exception타입1, ...]{
							(checked execption만, unchecked exception은 안해도 잘 넘어감)
		//일부러 던질 수 있는 exception
		throw new Exception타입; //return의 대체, 반환되어 메서드에서 나가짐		
   }

try catch 실행 순서별 수행되는 코드 라인 점검


----------------------------------- 6 일차 DB -----------------------------------




프로젝트 > 우클릭 > new > folder > lib
lib 폴더 ojdb14.jar 오른쪽클릭 build path>addbuildpath 선택하여 lib 추가

window > show view > other > DataManagement > Data Source Explorer

Data connections > 오른쪽클릭 > new > oracle > New Driver Definition > Oracle Thin Driver 10 
> jar List(ojdbc14.jar 없어 오류, 삭제) > add jar > c:/oraclexe/ojdbc14.jar 추가 > OK
> SID : xe > Host: localhost > user : kdn > pass : kdn > ping test > OK

프로젝트 > 우클릭 > new > folder > query > query 우클릭 > new > file > 파일명.sql

oracle_10 > kdn > xe > 쿼리작성 > alt+s

IO 예외 상황 : The Network Adapter could not establish the connection
서버에 접속할 수 없는 상황
 1. DB 서버 IP가 틀린경우
 2. DB 서버가 구동되지 않은 경우
   내컴퓨터 > 오른쪽클릭 > 관리 > 서비스
   OracleService(XE)(저장소), Oracle(XE)TNSListener(접속) : 두가지 재시작
   			 // (XE)는 DB명 이다.
이외엔 대부분 코드 에러

java.sql.SQLException:ORA-00904:"EMPN":부적합한 식별자
sql query에서 empn이라는 컬럼이 없는 경우

java.sql.SQLException: ORA-00911:문자가 부적합합니다.
sql query에 ';' 이 들어간 경우나 ','가 잘못된 경우

java.sql.SQLException: ORA-00942:테이블 또는 뷰가 존재하지 않습니다.
sql query에 테이블 명이 잘못된 경우 

java.sql.SQLException: ORA-00923: FROM 키워드가 필요한 위치에 없습니다.
sql query에 앞뒤 스페이스를 주지 않아 FROM 이 속성 or ALIAS가 된 경우

java.sql.SQLException: 인덱스에서 누락된 IN 또는 OUT 매개변수:: 1
sql query에 작성한 ? 개수와 stmt.setXXX(~) 개수가 맞지 않는 경우

java.sql.SQLException: 부적합한 열 이름
결과 처리 시 rs.getXXXX("컬럼명")에서 컬럼명이 맞지 않는 경우


----------------------------------- 7 일차 이론 -----------------------------------

String s = r.getString(1);
String s = rs.getString("fieldname"):

DBCP(Data Base Connection Pool)
커넥션을 풀에 보관해 놓고 사용자와 연결해주기 위해 사용


UI를 위한 디자인 패턴
┌ PAC Pattern
└ MVC Pattern

UI + processing => 과거엔 같은 코드로 이루져 있었음.
UI와 processing을 분리하자 ! 
그러다보니...
UI - View
Processing - Model
ResultData - Controller 
로 구분됨.
이것이 MVC Pattern

하다보니 Controller가 View와 떨어져있으니 불편하더라.
UI - Presentation
DAO - Abstract
Processing - Controller
이것이 PAC Pattern

MVC Pattern
├ 검색(조회조건), 데이터, 페이지, 
├ UI
├ Controller	
├ Model
│  ├ Service
│  │ 기능 별로 모아서 처리, transaction, 보안, 기능에 필요한 코드 [ex) 은행거래service ]
│  ├ DTO
│  │ (Data Transfer Object) - DB내 테이블 당 하나로 DAO와 연결하여 데이터 전송을 용이하도록 함 
│  └ DAO
│    (Data Access Object) - DB내 테이블 당 하나로 DB 접근 용이하도록 함			
└ DB




Employee 객체 제작
DB의 속성들 확인 후 Bean 제작
필요한 기능 확인 후 Dao 제작
Dao에 맞는 Dao Impl 제작
add, update, remove, search, searchAll, getcount
작성한 Dao, DaoImpl 을 통해 service 제작
service에 맞는 serviceImpl 제작
pagebean 제작
key, word, pageNo, interval, start = 1, int end = interval;


























