선언적함수
	function 함수명([인자]){ }
	
	1. 반환형을 쓸 필요가 없음
	2. 호출 하기 전에는 수행이 되지 않음
	3. 호출 위치가 관계가 없음(선언 이전에 호출 가능)

익명함수
	var 변수명 = function ([인자]){ }
	  =>변수명([인자]) 
	
	1. 함수를 리턴으로 사용 가능
	2. 호출 위치에 유의(선언 이후에 호출 가능)
	
계층 구조 DOM (Document Object Model) Tree - XMl 파싱
	 document
		│
	   html
   ┌────┴────┐
  head      body

주요 이벤트 속성
onclick, onchange, onload

이벤트 처리 방식
1. <tag명 on__속성__ = '__함수__'>
2. 요소.on__속성__ = __함수__;
3. 이벤트 등록┌ IE		: 요소.attach(____)
			  └ 그 외	: 요소.addEventListener(____)
1번은 많이 사용하지 않음.
 => 실 태그를 매번 추가해주는 방식이 번거롭다.
 2, 3번을 더 자주 사용하나, 
 3번은 함수명과 이벤트 등록방식이 달라
 꼭 3번이 필요하지 않다면 2번을 가장 많이 사용 하게 된다.
 3번의 그 외 브라우저 사용 방식이 정석이다.

 
게시판 검색 옵션의 경우 페이지 이동 시
검색 조건과 검색어가 들어있는 frm 양식, 이동페이지번호 를 갖고
다음 페이지를 계산하는 기법이 많이 쓰인다.

퀴즈 
1. 이벤트 거는거
2. 돔 문서

──────────────────────────────────────jQuery──────────────────────────────────────
1. 자바스크립트 온로드
window.onload = function(){
};
2. jQuery 레디
$(document).ready(function(){
});

자바스크립트와 jQuery의 공통부분
$() = jQuery를 의미

차이점 : 1은 모든 페이지를 로딩했을 때 실행
		 2는 HTML다운받아 DOM트리로 만들었을 때 실행

//추후 프로젝트 할 시 nocache 를 꼭 붙여놓고 써야한다!!!! (보안상 이유?ㅋ)

$( 선택자 | 태그 | 콜백함수 | 문서객체)

$('선택자') : 선택자에 해당하는 tag를 찾아 jquery 객체로 만듬
$('선택자').~~ ┐
			~~ │  함수들이 많이 있음.
			~~ ┘
$('선택자').css('속성명', '값') : css의 속성에 값을 넣음

선택자의 종류
	* : 모든요소
	태그명
	.클래스명
	#id명

선택자 두개를 붙이면 and조건
선택자 공백 선택자 : 후손
선택자  >   선택자 : 자손

입력양식 필터 선택자
┌요소:checked
└요소:selected

prototype을 사용하는 경우 $ 기호가 겹쳐 충돌 발생
$.conflict(); 해놓고 
아래에서부턴 jQuery()로 코딩함

$('<h1/>') : h1태그 생성
$ : 태그 삭제

$('h1').html() : h1내용 가져오기
$('h1').html('내용') : h1에 내용을 넣기

append, appendto
before

var attr = $('img').attr('src')
 => attr 에 src 정보 가져오기
$('img').attr('src', '../images/Jellyfish.jpg').attr('width', '100px');
 => attr src와 width에 값 입력하기

setInterval  외워야함


























